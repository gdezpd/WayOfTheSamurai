import profileReducer from "./profile-reducer";import dialogsReducer from "./dialogs-reducer";import sidebarReducer from "./sidebar-reducer";import {ActionsTypes} from "./ActionCreator";export type PostsArrayType = {    id: number    message: string    likeCount: number}export type ItemArrayType = {    name: string    id: number}export type MessageArrayType = {    message: string,    id: number}type ProfilePageType = {    postsArray: PostsArrayType[]    newPostText: string}type DialogsPageType = {    itemArray: ItemArrayType[],    messageArray: MessageArrayType[]    newMessage: string}export type  RootStateType = {    profilePage: ProfilePageType    dialogsPage: DialogsPageType    sidebar: sidebarType}type sidebarType = {}export type stateType = {    profilePage: {        postsArray: PostsArrayType[]        newPostText: string    },    dialogsPage: {        itemArray: ItemArrayType[],        messageArray: MessageArrayType[],    },    sidebar: {}}export type StoreType = {    _state: RootStateType,    _callSubscriber: () => void,    subscribe: (observer: () => void) => void,    getState: () => RootStateType,    dispatch: (action: ActionsTypes) => void,}export let store: StoreType = {    _state: {        profilePage: {            postsArray: [                {id: 1, message: 'Hi, how are you?', likeCount: 20},                {id: 2, message: 'It\'s my first post', likeCount: 5},            ],            newPostText: 'it-kamasutra'        },        dialogsPage: {            itemArray: [                {name: 'Seva', id: 1},                {name: 'Evgenya', id: 2},                {name: 'Slava', id: 3},                {name: 'Anya', id: 4},                {name: 'Sveta', id: 5},                {name: 'Roman', id: 6}            ],            messageArray: [                {message: 'Hi', id: 1},                {message: 'What you name', id: 2},                {message: 'i am number one', id: 3},                {message: 'Ok', id: 4},            ],            newMessage: 'sdxs'        },        sidebar: {}    },    _callSubscriber() {        console.log('State changet')    },    getState() {        return this._state    },    subscribe(observer) {        this._callSubscriber = observer;    },    dispatch(action) {        this._state.profilePage = profileReducer(this._state.profilePage, action);        this._state.dialogsPage = dialogsReducer(this._state.dialogsPage, action);        this._state.sidebar = sidebarReducer(this._state.sidebar, action);        this._callSubscriber();    }}//@ts-ignorewindow.store = storeconsole.log(store.getState())